#include <fstream>
#include <iostream>
#include <string>
#include <utility>
#include <vector>

using namespace std;

int numDigits(int n) {
  if (n > 0) {
    return 1 + numDigits(n / 10);
  }
  return 0;
}

pair<int, int> splitNumber(int n, int numDig) {
  int mid = numDig / 2;
  string num = to_string(n);
  int left = 0;
  int right = 0;
  for (size_t i = 0; i < num.size(); i++) {
    if (i < mid) {
      left = 10 * left + (num[i] - '0');
    } else {
      right = 10 * right + (num[i] - '0');
    }
  }
  return make_pair(left, right);
}

int main() {
  ifstream file("sample.txt");

  string content((istreambuf_iterator<char>(file)),
                 istreambuf_iterator<char>());
  file.close();

  vector<int> base;
  for (size_t i = 0; i < content.size(); i++) {
    int x = 0;
    while (isdigit(content[i])) {
      x = 10 * x + (content[i] - '0');
      i++;
    }
    base.push_back(x);
  }

  int repeat = 2;
  while (repeat--) {
    vector<int> temp;
    for (const auto &item : base) {
      if (item == 0) {
        temp.push_back(1);
        continue;
      }
      int numDig = numDigits(item);
      if (numDig % 2 == 0) {
        pair<int, int> x = splitNumber(item, numDig);
        temp.push_back(x.first);
        temp.push_back(x.second);
        continue;
      }
      temp.push_back(item * 2024);
    }
    base = temp;
  }

  for (auto item : base) {
    cout << item << " ";
  }

  return 0;
}
